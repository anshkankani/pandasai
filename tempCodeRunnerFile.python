MOD = 1000000007

def get(g, m1, m2, dp, ml, N):
    if m2 == ml:  # All cities are visited
        return 1
    if dp[m1][m2] != -1:
        return dp[m1][m2]
    
    ans = 0
    for i in range(N):
        if (m1 & (1 << i)) and not (m2 & (1 << i)):
            new_m2 = m2 | (1 << i)
            cc = m1
            for j in g[i]:
                cc |= (1 << j)
            ans += get(g, cc, new_m2, dp, ml, N)
            ans %= MOD

    dp[m1][m2] = ans
    return ans

def solve():
    import sys
    input = sys.stdin.read
    data = input().split()
    
    idx = 0
    T = int(data[idx])
    idx += 1
    
    results = []
    
    for _ in range(T):
        N = int(data[idx])
        M = int(data[idx + 1])
        idx += 2
        
        g = [[] for _ in range(N)]
        for __ in range(M):
            X = int(data[idx]) - 1
            Y = int(data[idx + 1]) - 1
            idx += 2
            g[X].append(Y)
            g[Y].append(X)
        
        ml = (1 << N) - 1
        dp = [[-1] * (1 << N) for _ in range(1 << N)]
        
        ans = 0
        for i in range(N):
            ans += get(g, 1 << i, 0, dp, ml, N)
            ans %= MOD
        
        results.append(ans)
    
    for result in results:
        print(result)

# Reading from standard input
solve()
